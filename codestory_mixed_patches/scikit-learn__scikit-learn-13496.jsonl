{
    "instance_id": "scikit-learn__scikit-learn-13496",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py\nindex 8a1bd3625..af4502ae8 100644\n--- a/sklearn/ensemble/iforest.py\n+++ b/sklearn/ensemble/iforest.py\n@@ -173,7 +173,84 @@ class IsolationForest(BaseBagging, OutlierMixin):\n                  n_jobs=None,\n                  behaviour='old',\n                  random_state=None,\n-                 verbose=0):\n+                 verbose=0,\n+                 warm_start=False):\n+        \"\"\"\n+        Parameters\n+        ----------\n+        n_estimators : int, optional (default=100)\n+            The number of base estimators in the ensemble.\n+\n+        max_samples : int or float, optional (default=\"auto\")\n+            The number of samples to draw from X to train each base estimator.\n+                - If int, then draw `max_samples` samples.\n+                - If float, then draw `max_samples * X.shape[0]` samples.\n+                - If \"auto\", then `max_samples=min(256, n_samples)`.\n+\n+            If max_samples is larger than the number of samples provided,\n+            all samples will be used for all trees (no sampling).\n+\n+        contamination : float in (0., 0.5), optional (default=\"legacy\")\n+            The amount of contamination of the data set, i.e. the proportion\n+            of outliers in the data set. Used when fitting to define the threshold\n+            on the decision function. If 'auto', the decision function threshold is\n+            determined as in the original paper.\n+\n+            .. versionchanged:: 0.20\n+               The default value of ``contamination`` will change from 0.1 in 0.20\n+               to ``'auto'`` in 0.22.\n+\n+        max_features : int or float, optional (default=1.0)\n+            The number of features to draw from X to train each base estimator.\n+\n+                - If int, then draw `max_features` features.\n+                - If float, then draw `max_features * X.shape[1]` features.\n+\n+        bootstrap : boolean, optional (default=False)\n+            If True, individual trees are fit on random subsets of the training\n+            data sampled with replacement. If False, sampling without replacement\n+            is performed.\n+\n+        n_jobs : int or None, optional (default=None)\n+            The number of jobs to run in parallel for both `fit` and `predict`.\n+            ``None`` means 1 unless in a :obj:`joblib.parallel_backend` context.\n+            ``-1`` means using all processors. See :term:`Glossary <n_jobs>`\n+            for more details.\n+\n+        behaviour : str, default='old'\n+            Behaviour of the ``decision_function`` which can be either 'old' or\n+            'new'. Passing ``behaviour='new'`` makes the ``decision_function``\n+            change to match other anomaly detection algorithm API which will be\n+            the default behaviour in the future. As explained in details in the\n+            ``offset_`` attribute documentation, the ``decision_function`` becomes\n+            dependent on the contamination parameter, in such a way that 0 becomes\n+            its natural threshold to detect outliers.\n+\n+            .. versionadded:: 0.20\n+               ``behaviour`` is added in 0.20 for back-compatibility purpose.\n+\n+            .. deprecated:: 0.20\n+               ``behaviour='old'`` is deprecated in 0.20 and will not be possible\n+               in 0.22.\n+\n+            .. deprecated:: 0.22\n+               ``behaviour`` parameter will be deprecated in 0.22 and removed in\n+               0.24.\n+\n+        random_state : int, RandomState instance or None, optional (default=None)\n+            If int, random_state is the seed used by the random number generator;\n+            If RandomState instance, random_state is the random number generator;\n+            If None, the random number generator is the RandomState instance used\n+            by `np.random`.\n+\n+        verbose : int, optional (default=0)\n+            Controls the verbosity of the tree building process.\n+\n+        warm_start : bool, optional (default=False)\n+            When set to ``True``, reuse the solution of the previous call to fit\n+            and add more estimators to the ensemble, otherwise, just fit a whole\n+            new forest. See :term:`the Glossary <warm_start>`.\n+        \"\"\"\n         super().__init__(\n             base_estimator=ExtraTreeRegressor(\n                 max_features=1,\n@@ -187,7 +264,8 @@ class IsolationForest(BaseBagging, OutlierMixin):\n             max_features=max_features,\n             n_jobs=n_jobs,\n             random_state=random_state,\n-            verbose=verbose)\n+            verbose=verbose,\n+            warm_start=warm_start)\n \n         self.behaviour = behaviour\n         self.contamination = contamination\n",
    "resolved": true
}