{
    "instance_id": "django__django-14752",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/django/contrib/admin/views/autocomplete.py b/django/contrib/admin/views/autocomplete.py\nindex 3903e4c98c..da41190bb4 100644\n--- a/django/contrib/admin/views/autocomplete.py\n+++ b/django/contrib/admin/views/autocomplete.py\n@@ -5,7 +5,16 @@ from django.views.generic.list import BaseListView\n \n \n class AutocompleteJsonView(BaseListView):\n-    \"\"\"Handle AutocompleteWidget's AJAX requests for data.\"\"\"\n+    \"\"\"Handle AutocompleteWidget's AJAX requests for data.\n+\n+    This view can be extended to customize the serialization of result objects.\n+    Example:\n+        class CustomAutocompleteJsonView(AutocompleteJsonView):\n+            def serialize_result(self, obj, to_field_name):\n+                result = super().serialize_result(obj, to_field_name)\n+                result['notes'] = obj.notes\n+                return result\n+    \"\"\"\n     paginate_by = 20\n     admin_site = None\n \n@@ -26,8 +35,7 @@ class AutocompleteJsonView(BaseListView):\n         context = self.get_context_data()\n         return JsonResponse({\n             'results': [\n-                {'id': str(getattr(obj, to_field_name)), 'text': str(obj)}\n-                for obj in context['object_list']\n+                self.serialize_result(obj, to_field_name) for obj in context['object_list']\n             ],\n             'pagination': {'more': context['page_obj'].has_next()},\n         })\n@@ -100,3 +108,11 @@ class AutocompleteJsonView(BaseListView):\n     def has_perm(self, request, obj=None):\n         \"\"\"Check if user has permission to access the related model.\"\"\"\n         return self.model_admin.has_view_permission(request, obj=obj)\n+\n+    def serialize_result(self, obj, to_field_name):\n+        \"\"\"\n+        Serialize result object to a dict for JSON response.\n+\n+        Override this method to customize the serialization of result objects.\n+        \"\"\"\n+        return {'id': str(getattr(obj, to_field_name)), 'text': str(obj)}\n\\ No newline at end of file\n",
    "resolved": true
}