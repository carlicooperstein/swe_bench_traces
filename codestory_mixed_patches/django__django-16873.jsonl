{
    "instance_id": "django__django-16873",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 03676533b7..861c44eda9 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -587,7 +587,11 @@ def join(value, arg, autoescape=True):\n     try:\n         if autoescape:\n             value = [conditional_escape(v) for v in value]\n-        data = conditional_escape(arg).join(value)\n+            arg = conditional_escape(arg)\n+        else:\n+            value = [str(v) for v in value]\n+            arg = str(arg)\n+        data = arg.join(value)\n     except TypeError:  # Fail silently if arg isn't iterable.\n         return value\n     return mark_safe(data)\ndiff --git a/django/utils/html.py b/django/utils/html.py\nindex c32a36fa93..226a013a0a 100644\n--- a/django/utils/html.py\n+++ b/django/utils/html.py\n@@ -79,13 +79,15 @@ def json_script(value, element_id=None, encoder=None):\n     return format_html(template, *args)\n \n \n-def conditional_escape(text):\n+def conditional_escape(text, autoescape=True):\n     \"\"\"\n     Similar to escape(), except that it doesn't operate on pre-escaped strings.\n \n     This function relies on the __html__ convention used both by Django's\n     SafeData class and by third-party libraries like markupsafe.\n     \"\"\"\n+    if not autoescape:\n+        return text\n     if isinstance(text, Promise):\n         text = str(text)\n     if hasattr(text, \"__html__\"):\n",
    "resolved": true
}