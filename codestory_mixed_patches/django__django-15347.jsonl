{
    "instance_id": "django__django-15347",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py\nindex 01422066a6..8bdbb5157c 100644\n--- a/django/contrib/messages/storage/base.py\n+++ b/django/contrib/messages/storage/base.py\n@@ -14,7 +14,7 @@ class Message:\n     def __init__(self, level, message, extra_tags=None):\n         self.level = int(level)\n         self.message = message\n-        self.extra_tags = extra_tags\n+        self.extra_tags = extra_tags if extra_tags is not None else None\n \n     def _prepare(self):\n         \"\"\"\n@@ -22,7 +22,8 @@ class Message:\n         and ``extra_tags`` to str in case they are lazy translations.\n         \"\"\"\n         self.message = str(self.message)\n-        self.extra_tags = str(self.extra_tags) if self.extra_tags is not None else None\n+        if self.extra_tags is not None:\n+            self.extra_tags = str(self.extra_tags)\n \n     def __eq__(self, other):\n         if not isinstance(other, Message):\ndiff --git a/django/contrib/messages/storage/cookie.py b/django/contrib/messages/storage/cookie.py\nindex 1d390c71dd..e48d4edb08 100644\n--- a/django/contrib/messages/storage/cookie.py\n+++ b/django/contrib/messages/storage/cookie.py\n@@ -19,7 +19,7 @@ class MessageEncoder(json.JSONEncoder):\n             # Using 0/1 here instead of False/True to produce more compact json\n             is_safedata = 1 if isinstance(obj.message, SafeData) else 0\n             message = [self.message_key, is_safedata, obj.level, obj.message]\n-            if obj.extra_tags:\n+            if obj.extra_tags is not None:\n                 message.append(obj.extra_tags)\n             return message\n         return super().default(obj)\n",
    "resolved": true
}