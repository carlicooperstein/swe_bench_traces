{
    "instance_id": "django__django-11815",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py\nindex 27b5cbd379..e6600156fc 100644\n--- a/django/db/migrations/serializer.py\n+++ b/django/db/migrations/serializer.py\n@@ -120,9 +120,10 @@ class EnumSerializer(BaseSerializer):\n     def serialize(self):\n         enum_class = self.value.__class__\n         module = enum_class.__module__\n-        v_string, v_imports = serializer_factory(self.value.value).serialize()\n-        imports = {'import %s' % module, *v_imports}\n-        return \"%s.%s(%s)\" % (module, enum_class.__name__, v_string), imports\n+        # Use the name of the enum instead of its value\n+        enum_name = self.value.name\n+        imports = {'import %s' % module}\n+        return \"%s.%s[%s]\" % (module, enum_class.__name__, enum_name), imports\n \n \n class FloatSerializer(BaseSimpleSerializer):\n@@ -326,6 +327,9 @@ def serializer_factory(value):\n         return OperationSerializer(value)\n     if isinstance(value, type):\n         return TypeSerializer(value)\n+    import enum\n+    if isinstance(value, enum.Enum):\n+        return EnumSerializer(value)\n     # Anything that knows how to deconstruct itself.\n     if hasattr(value, 'deconstruct'):\n         return DeconstructableSerializer(value)\n",
    "resolved": false
}