{
    "instance_id": "sympy__sympy-22714",
    "model_name_or_path": "codestory-mixed",
    "model_patch": "diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py\nindex 73c20334d0..e226172d9a 100644\n--- a/sympy/geometry/point.py\n+++ b/sympy/geometry/point.py\n@@ -152,7 +152,7 @@ def __new__(cls, *args, **kwargs):\n                         'warn' or 'ignore'.'''))\n         if any(coords[dim:]):\n             raise ValueError('Nonzero coordinates cannot be removed.')\n-        if any(a.is_number and im(a) for a in coords):\n+        if evaluate and any(a.is_number and im(a) for a in coords):\n             raise ValueError('Imaginary coordinates are not permitted.')\n         if not all(isinstance(a, Expr) for a in coords):\n             raise TypeError('Coordinates must be valid SymPy expressions.')\n@@ -911,6 +911,12 @@ class Point2D(Point):\n \n     def __new__(cls, *args, _nocheck=False, **kwargs):\n         if not _nocheck:\n+            evaluate = kwargs.get('evaluate', global_parameters.evaluate)\n+            if not evaluate:\n+                coords = Tuple(*args)\n+                if len(coords) != 2:\n+                    raise ValueError(\"Point2D requires exactly 2 coordinates.\")\n+                return GeometryEntity.__new__(cls, *coords)\n             kwargs['dim'] = 2\n             args = Point(*args, **kwargs)\n         return GeometryEntity.__new__(cls, *args)\n",
    "resolved": true
}